<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> 

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- scan 읽어들이겠다 com.ohyoyo.service -->
	<!-- 제일중요 ioc di를 할수있음 -->
	<context:component-scan base-package="com.ohyoyo.controller" />
	<context:component-scan base-package="com.ohyoyo.service" />
	
	<!-- Google Mail Send  -->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587" /> <!-- 465 or 25 -->
		<beans:property name="username" value="ohyoyo200225@gmail.com" />
		<beans:property name="password" value="javaproject!11" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- Add Interceptor Beans -->
	<beans:bean id="loginInterceptor" class="com.ohyoyo.interceptor.LoginInterceptor"></beans:bean>
	
	<!-- URL Mapping for Interceptor call 인터셉터 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/member/update"/>
			<mapping path="/member/pwupdate"/>
			<mapping path="/member/drop"/>
			<mapping path="/member/mypage"/>
			<mapping path="/board/write"/>
			<mapping path="/board/update"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
	<!--  aop 기능을 쓰겠다 aop의 설정으로 Proxy객체를 자동으로 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans:beans>
